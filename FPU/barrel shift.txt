module mux2X1(in0, in1, sel, out);
input in0, in1, sel;
output out;
wire in0, in1, sel;
reg out;
always@(*) begin
out = sel?in1:in0;
end
endmodule

module barrel_shifter_8bit_R (in, ctrl, out);
  input  [7:0] in;
  input [2:0] ctrl;
  output [7:0] out;
  wire [7:0] x,y;
  
	//4bit shift right
	mux2X1  muxr_47 (.in0(in[7]),.in1(1'b0),.sel(ctrl[2]),.out(x[7]));
	mux2X1  muxr_46 (.in0(in[6]),.in1(1'b0),.sel(ctrl[2]),.out(x[6]));
	mux2X1  muxr_45 (.in0(in[5]),.in1(1'b0),.sel(ctrl[2]),.out(x[5]));
	mux2X1  muxr_44 (.in0(in[4]),.in1(1'b0),.sel(ctrl[2]),.out(x[4]));
	mux2X1  muxr_43 (.in0(in[3]),.in1(in[7]),.sel(ctrl[2]),.out(x[3]));
	mux2X1  muxr_42 (.in0(in[2]),.in1(in[6]),.sel(ctrl[2]),.out(x[2]));
	mux2X1  muxr_41 (.in0(in[1]),.in1(in[5]),.sel(ctrl[2]),.out(x[1]));
	mux2X1  muxr_40 (.in0(in[0]),.in1(in[4]),.sel(ctrl[2]),.out(x[0]));
	 
	//2 bit shift right
	 
	mux2X1  muxr_27 (.in0(x[7]),.in1(1'b0),.sel(ctrl[1]),.out(y[7]));
	mux2X1  muxr_26 (.in0(x[6]),.in1(1'b0),.sel(ctrl[1]),.out(y[6]));
	mux2X1  muxr_25 (.in0(x[5]),.in1(x[7]),.sel(ctrl[1]),.out(y[5]));
	mux2X1  muxr_24 (.in0(x[4]),.in1(x[6]),.sel(ctrl[1]),.out(y[4]));
	mux2X1  muxr_23 (.in0(x[3]),.in1(x[5]),.sel(ctrl[1]),.out(y[3]));
	mux2X1  muxr_22 (.in0(x[2]),.in1(x[4]),.sel(ctrl[1]),.out(y[2]));
	mux2X1  muxr_21 (.in0(x[1]),.in1(x[3]),.sel(ctrl[1]),.out(y[1]));
	mux2X1  muxr_20 (.in0(x[0]),.in1(x[2]),.sel(ctrl[1]),.out(y[0]));
	 
	//1 bit shift right
	mux2X1  muxr_17 (.in0(y[7]),.in1(1'b0),.sel(ctrl[0]),.out(out[7]));
	mux2X1  muxr_16 (.in0(y[6]),.in1(y[7]),.sel(ctrl[0]),.out(out[6]));
	mux2X1  muxr_15 (.in0(y[5]),.in1(y[6]),.sel(ctrl[0]),.out(out[5]));
	mux2X1  muxr_14 (.in0(y[4]),.in1(y[5]),.sel(ctrl[0]),.out(out[4]));
	mux2X1  muxr_13 (.in0(y[3]),.in1(y[4]),.sel(ctrl[0]),.out(out[3]));
	mux2X1  muxr_12 (.in0(y[2]),.in1(y[3]),.sel(ctrl[0]),.out(out[2]));
	mux2X1  muxr_11 (.in0(y[1]),.in1(y[2]),.sel(ctrl[0]),.out(out[1]));
	mux2X1  muxr_10 (.in0(y[0]),.in1(y[1]),.sel(ctrl[0]),.out(out[0]));
	
endmodule

module barrel_shifter_8bit_L (in, ctrl, out);
  input  [7:0] in;
  input [2:0] ctrl;
  output [7:0] out;
  wire [7:0] x,y;
  
	//1 bit shift left
	mux2X1 muxl_10 (.in0(1'b0), .in1(in[0]), .sel(ctrl[0]), .out(x[0]));
	mux2X1 muxl_11 (.in0(in[0]), .in1(in[1]), .sel(ctrl[0]), .out(x[1]));
	mux2X1 muxl_12 (.in0(in[1]), .in1(in[2]), .sel(ctrl[0]), .out(x[2]));
	mux2X1 muxl_13 (.in0(in[2]), .in1(in[3]), .sel(ctrl[0]), .out(x[3]));
	mux2X1 muxl_14 (.in0(in[3]), .in1(in[4]), .sel(ctrl[0]), .out(x[4]));
	mux2X1 muxl_15 (.in0(in[4]), .in1(in[5]), .sel(ctrl[0]), .out(x[5]));
	mux2X1 muxl_16 (.in0(in[5]), .in1(in[6]), .sel(ctrl[0]), .out(x[6]));
	mux2X1 muxl_17 (.in0(in[6]), .in1(in[7]), .sel(ctrl[0]), .out(x[7]));
	
	//2 bit shift left
	mux2X1 muxl_20 (.in0(1'b0), .in1(x[0]), .sel(ctrl[1]), .out(y[0]));
	mux2X1 muxl_21 (.in0(1'b0), .in1(x[1]), .sel(ctrl[1]), .out(y[1]));
	mux2X1 muxl_22 (.in0(x[0]), .in1(x[2]), .sel(ctrl[1]), .out(y[2]));
	mux2X1 muxl_23 (.in0(x[1]), .in1(x[3]), .sel(ctrl[1]), .out(y[3]));
	mux2X1 muxl_24 (.in0(x[2]), .in1(x[4]), .sel(ctrl[1]), .out(y[4]));
	mux2X1 muxl_25 (.in0(x[3]), .in1(x[5]), .sel(ctrl[1]), .out(y[5]));
	mux2X1 muxl_26 (.in0(x[4]), .in1(x[6]), .sel(ctrl[1]), .out(y[6]));
	mux2X1 muxl_27 (.in0(x[5]), .in1(x[7]), .sel(ctrl[1]), .out(y[7]));
	
	//4 bit shift left
	mux2X1 muxl_40 (.in0(1'b0), .in1(y[0]), .sel(ctrl[2]), .out(out[0]));
	mux2X1 muxl_41 (.in0(1'b0), .in1(y[1]), .sel(ctrl[2]), .out(out[1]));
	mux2X1 muxl_42 (.in0(1'b0), .in1(y[2]), .sel(ctrl[2]), .out(out[2]));
	mux2X1 muxl_43 (.in0(1'b0), .in1(y[3]), .sel(ctrl[2]), .out(out[3]));
	mux2X1 muxl_44 (.in0(y[2]), .in1(y[4]), .sel(ctrl[2]), .out(out[4]));
	mux2X1 muxl_45 (.in0(y[3]), .in1(y[5]), .sel(ctrl[2]), .out(out[5]));
	mux2X1 muxl_46 (.in0(y[4]), .in1(y[6]), .sel(ctrl[2]), .out(out[6]));
	mux2X1 muxl_47 (.in0(y[5]), .in1(y[7]), .sel(ctrl[2]), .out(out[7]));
	
endmodule